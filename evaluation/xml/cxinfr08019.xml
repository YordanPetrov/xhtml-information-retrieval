<?xml version="1.0"?>
<course xmlns:h="http://www.w3.org/1999/xhtml"><title> Informatics 2C -Introduction to Software Engineering (INFR08019)</title><outline><school>School of Informatics</school><college>College of Science and Engineering</college><course_type>Standard</course_type><availability>Available to all students</availability><credit_level>SCQF Level 8 (Year 2 Undergraduate)</credit_level><credits>10</credits><subj_area>Informatics</subj_area><other_subj_area>None</other_subj_area><website>http://www.inf.ed.ac.uk/teaching/courses/inf2c-se/</website><gaelic_taught>No</gaelic_taught><c_description>This course gives an overview of the
engineering of software systems. It introduces the main activities
and concerns of industrial and commercial software engineering, and
enables students to go beyond programming towards software
engineering in their own work.</c_description></outline><entry_requirements><prerequisites>Students MUST have passed: Informatics 1 -
Computation and Logic (INFR08012) AND Informatics 1 -
Data and Analysis (INFR08015) AND Informatics 1 -
Functional Programming (INFR08013) AND Informatics 1 -
Object-Oriented Programming (INFR08014)</prerequisites><corequisites/><restrictions/><other_requirements>None</other_requirements><additional_costs>none</additional_costs></entry_requirements><vs_info><prerequisites>None</prerequisites><visit_students>No</visit_students></vs_info><delivery_info><delivery_period> 2012/13 Semester1, Available to all students (SV1) </delivery_period><learn_enabled>  No</learn_enabled><quota>  None</quota><activity><Location>Central</Location><Activity>Lecture</Activity><Description/><time><Monday/><Tuesday/><Wednesday/><Thursday>15:00 - 15:50</Thursday><Friday/></time></activity><activity><Location>Central</Location><Activity>Lecture</Activity><Description/><time><Monday/><Tuesday>17:10 - 18:00</Tuesday><Wednesday/><Thursday/><Friday/></time></activity><first_class>Week 1, Tuesday, 17:10 - 18:00,
Zone: Central. HRB LT Robson Building</first_class><exam_info><exam><exam_diet>Main Exam Diet S1
(December)</exam_diet><paper_name/><duration>1:00</duration></exam><exam><exam_diet>Resit Exam Diet (August)</exam_diet><paper_name/><duration>1:00</duration></exam></exam_info></delivery_info><learning_outcomes>- Explain how to apply commonly agreed ethical principles to a
software engineering situation.
- Motivate and describe the activities in the software engineering
process.
- Construct use cases for an application scenario.
- Explain and construct UML class diagrams and sequence
diagrams.
- Explain how a software system and its construction may be
assessed using testing and other relevant techniques
- Evaluate aspects of human usability of an application program or
web site.
- Compare different approaches to software licensing.
- Use a modern IDE to build a large Java system, making appropriate
use of configuration management, testing and other appropriate
tools.</learning_outcomes><assessment>Written Examination - 75%
Assessed Assignments - 25%
Oral Presentations - 0%

In order to pass the course you must satisfy all of the following
requirements:
* achieve at least 35% in the examination;
* achieve a total of at least 25% in assessed coursework;
* obtain a combined total mark of at least 40%

There will be at least one assessed exercise involving working with
software engineering tools.</assessment><special_arrangements>None</special_arrangements><additional_info><academic_description>Not entered</academic_description><syllabus>The aim is to build on the programming language
material taught in Informatics 1 and consider the process of
constructing large software systems. Beyond the construction
process itself, some important surrounding concerns are introduced
including: satisfying non-functional requirements, building good
human interfaces, and considering various software licensing
models.

The core topics covered, all at introductory level, in this course
are:

* Software engineering as a discipline: history, professionalism,
ethics
* Software engineering activities: requirements capture; design;
construction; testing, debugging and maintenance; software process
management.
* Modelling in UML (use cases, class diagrams, sequence
diagrams).
* Design principles and their influence on maintainability of
software.
* Software configuration management, release and deployment.
* Verification, validation and testing.
* Software usability and HCI issues.
* Economic and social aspects of software ownership, patents and
licensing.
* Software development processes and management; quality
assurance.

Some further topics will also be covered, depending on topicality
and lecturer's expertise. These might include, for example:

* Software security: security flaws and how to avoid them in
Internet and systems programming;
* Model-driven development: how to use UML for construction, not
just description, of systems
* Software in the world: web services, cloud computing, autonomous
computing and other means of delivering functionality
* Agile software development.</syllabus><transferable_skills>Not entered</transferable_skills><reading_list>Software Engineering, I. Somerville</reading_list><study_abroad>Not entered</study_abroad><study_pattern>Lectures 15
Tutorials 5
Timetabled Laboratories 0
Non-timetabled assessed assignments 25
Private Study/Other 55
Total 100
</study_pattern><keywords>Not entered</keywords></additional_info><contacts><course_organiser>Prof Colin Stirling
Tel: (0131 6)50 5186
Email: cps@inf.ed.ac.uk</course_organiser><course_secretary>Ms Kendal Reid
Tel: (0131 6)50 5194
Email: kr@inf.ed.ac.uk</course_secretary></contacts></course>
