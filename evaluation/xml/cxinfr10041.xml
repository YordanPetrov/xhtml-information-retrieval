<?xml version="1.0"?>
<course xmlns:h="http://www.w3.org/1999/xhtml"><title> Automated Reasoning (Level10) (INFR10041)</title><outline><school>School of Informatics</school><college>College of Science and Engineering</college><course_type>Standard</course_type><availability>Available to all students</availability><credit_level>SCQF Level 10 (Year 4 Undergraduate)</credit_level><credits>10</credits><subj_area>Informatics</subj_area><other_subj_area>None</other_subj_area><website>http://www.inf.ed.ac.uk/teaching/courses/ar</website><gaelic_taught>No</gaelic_taught><c_description>The aim of the module is to describe
how reasoning can be automated. Major emphases are on: how
knowledge can be represented using logic; how these representations
can be used as the basis for reasoning and how these reasoning
processes can be guided to a successful conclusion. Many of the
examples are drawn from mathematics because this domain contains
lots of challenging reasoning problems which can be succinctly
stated. A version of this course is available also at level 11 for
students who wish to explore the mathematics of theorem proving in
greater depth, with the aim of specialising in one of its many
sub-fields.</c_description></outline><entry_requirements><prerequisites>Students MUST have passed: Informatics 2D -
Reasoning and Agents (INFR08010)</prerequisites><corequisites/><restrictions>Students MUST NOT also be taking Automated Reasoning
(Level 11) (INFR11074)</restrictions><other_requirements>Successful completion of Year 3 of an Informatics
Single or Combined Honours Degree, or equivalent by permission of
the School. This course assumes prior mathematical knowledge of
induction.</other_requirements><additional_costs>None</additional_costs></entry_requirements><vs_info><prerequisites>None</prerequisites><visit_students>Yes</visit_students></vs_info><delivery_info><delivery_period> 2012/13 Semester1, Available to all students (SV1) </delivery_period><learn_enabled>  No</learn_enabled><quota>  None</quota><activity><Location>Central</Location><Activity>Lecture</Activity><Description/><time><Monday>16:10 - 17:00</Monday><Tuesday/><Wednesday/><Thursday/><Friday/></time></activity><activity><Location>Central</Location><Activity>Lecture</Activity><Description/><time><Monday/><Tuesday/><Wednesday/><Thursday>16:10 - 17:00</Thursday><Friday/></time></activity><activity><Location>First Class</Location><Activity>Week 1, Monday, 16:10 - 17:00,
Zone: Central. LT5 7 Bristo Square</Activity><time/></activity><activity><Location>Exam Information</Location><time/></activity><activity><Location>Exam Diet</Location><Activity>Paper Name</Activity><Description>Hours:Minutes</Description><time><Monday/></time></activity><activity><Location>Main Exam Diet S2
(April/May)</Location><Activity/><Description>2:00</Description><time><Monday/></time></activity><activity><Location/><time/></activity><activity><Location/><time/></activity><activity><Location>Delivery period: 2012/13 Semester
1, Part-year visiting students only (VV1) 
</Location><Activity>Learn enabled:  No</Activity><Description>Quota:  None</Description><time/></activity><activity><Location>Location</Location><Activity>Activity</Activity><Description>Description</Description><time><Monday>Monday</Monday><Tuesday>Tuesday</Tuesday><Wednesday>Wednesday</Wednesday><Thursday>Thursday</Thursday><Friday>Friday</Friday></time></activity><activity><Location>Central</Location><Activity>Lecture</Activity><Description/><time><Monday>16:10 - 17:00</Monday><Tuesday/><Wednesday/><Thursday/><Friday/></time></activity><activity><Location>Central</Location><Activity>Lecture</Activity><Description/><time><Monday/><Tuesday/><Wednesday/><Thursday>16:10 - 17:00</Thursday><Friday/></time></activity><first_class>Week 1, Monday, 16:10 - 17:00,
Zone: Central. LT5 7 Bristo Square</first_class><exam_info><exam><exam_diet>Main Exam Diet S1
(December)</exam_diet><paper_name/><duration>2:00</duration></exam></exam_info></delivery_info><learning_outcomes>1 - represent mathematical and other knowledge using
logic.
2 - compare various reasoning techniques.
3 - formalize informal knowledge and reason rigorously about
it.
4 - discuss some of the tradeoffs between some rival techniques for
the same reasoning task.
5 - implement/use reasoning techniques in a computer
program/theorem prover.
6 - organize their own study to manage project development.
7 - search and read the literature.
8 - conduct exploratory experiments.
9 - critically analyze and evaluate other people's work.
10 - be broadly up-to-date with current research in the field</learning_outcomes><assessment>Written Examination 60
Assessed Assignments 40
Oral Presentations 0

The coursework is comprised of two practical exercises. The
students may be asked to reason about particular domains (e.g.
geometry) in a theorem prover such as Isabelle or Coq. They may
also be asked to verify a program using the SPIN model
checker.

If delivered in semester 1, this course will have an option for
semester 1 only visiting undergraduate students, providing
assessment prior to the end of the calendar year.</assessment><special_arrangements>None</special_arrangements><additional_info><academic_description>Not entered</academic_description><syllabus>The module combines an exposition of theory with
the analysis of particular computer programs for reasoning. Topics
will be selected from the following list:

# First Order Logic and Higher Order Logic
* Syntax
* HOL: Types and terms, currying and binders
* Unification algorithm
* Natural Deduction

# Model Checking
* Computation Tree Logic: syntax and semantics
* A model checking algorithm
* Model checker: SMV or SPIN
* Fairness
* Alternatives and extensions of CTL: LTL, CTL*

# Interactive Theorem Proving
* Human-oriented methods
* Interactive provers and proof checkers
* LCF style theorem proving
* Proof styles
* Formalized Mathematics

# Decidable Problems and Automation
* Presburger arithmetic
* Geometry theorem proving
* Induction and recursion
* Simplification, proof planning, and rippling

# Program Verification
* Functional programs
* Case studies e.g. sorting algorithms

Relevant QAA Computing Curriculum Sections: Artificial
Intelligence</syllabus><transferable_skills>Not entered</transferable_skills><reading_list>* T. Nipkow, L. C. Paulson, and M. Wenzel.
Isabelle/HOL: A Proof Assistant for Higher-Order Logic ,
Springer-Verlag, 2002.
Logic in Computer Science, Modelling and and Reasoning about
Systems, M.Huth and M.Ryan, Cambridge University Press, 2nd
Edition, 2004
The Computer Modelling of Mathematical Reasoning, A. Bundy,
Academic Press 1983</reading_list><study_abroad>Not entered</study_abroad><study_pattern>Lectures 20
Tutorials 0
Timetabled Laboratories 0
Non-timetabled assessed assignments 40
Private Study/Other 40
Total 100</study_pattern><keywords>Not entered</keywords></additional_info><contacts><course_organiser>Dr Mary Cryan
Tel: (0131 6)50 5153
Email: mcryan@inf.ed.ac.uk</course_organiser><course_secretary>Miss Kate Weston
Tel: (0131 6)50 2701
Email: Kate.Weston@ed.ac.uk</course_secretary></contacts></course>
