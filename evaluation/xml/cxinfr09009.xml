<?xml version="1.0"?>
<course xmlns:h="http://www.w3.org/1999/xhtml"><title> Computer Architecture(INFR09009)</title><outline><school>School of Informatics</school><college>College of Science and Engineering</college><course_type>Standard</course_type><availability>Available to all students</availability><credit_level>SCQF Level 9 (Year 3 Undergraduate)</credit_level><credits>10</credits><subj_area>Informatics</subj_area><other_subj_area>None</other_subj_area><website>http://www.inf.ed.ac.uk/teaching/courses/car</website><gaelic_taught>No</gaelic_taught><c_description>Computer architecture is about
optimising the design of computer hardware and software under
constraints of time, cost and power consumption. Over the years,
improvements intechnology and advances in computer architecture
have resulted in huge increases in computer performance. This
course examines the fundamentals of high-performance computer
architecture and looks at how the interface between hardware and
software (architecture and compiler) influences performance.</c_description></outline><entry_requirements><prerequisites/><corequisites/><restrictions/><other_requirements>Successful completion of Year 2 of an Informatics
Single or Combined Degree, or equivalent by permission of the
School.</other_requirements><additional_costs>None</additional_costs></entry_requirements><vs_info><prerequisites>None</prerequisites><visit_students>Yes</visit_students></vs_info><delivery_info><delivery_period> 2012/13 Semester2, Available to all students (SV1) </delivery_period><learn_enabled>  No</learn_enabled><quota>  None</quota><activity><Location>Central</Location><Activity>Lecture</Activity><Description/><time><Monday/><Tuesday/><Wednesday/><Thursday>10:00 - 10:50</Thursday><Friday/></time></activity><activity><Location>Central</Location><Activity>Lecture</Activity><Description/><time><Monday>10:00 - 10:50</Monday><Tuesday/><Wednesday/><Thursday/><Friday/></time></activity><first_class>Week 1, Monday, 10:00 - 10:50,
Zone: Central. D.01, Forrest Hill</first_class><exam_info><exam><exam_diet>Main Exam Diet S2
(April/May)</exam_diet><paper_name/><duration>2:00</duration></exam><exam><exam_diet>Resit Exam Diet (August)</exam_diet><paper_name/><duration>2:00</duration></exam></exam_info></delivery_info><learning_outcomes>1 - Describe the structure and operational characteristics of a
pipelined microprocessor.
2 - Explain principles of: orthogonal instruction set design;
pipeline hazards and interlocks; out of order execution;
scoreboards and reservation stations and their use; branch
prediction (both static and dynamic); and techniques (both software
and hardware) for exploiting loop-level parallelism.
3 - Evaluate the performance of a combined processor and memory
system with respect to cycles-per-instruction (CPI) and memory
bandwidth requirements.
4 - Explain the principle of memory locality and show how a memory
hierarchy exploits the various forms of locality.
5 - Give an outline design of a memory hierarchy and specify
reasonable parameters for each configuration point (capacity,
associativity, block size, and write policies) at each level in the
hierarchy.
6 - Describe the memory coherency issues involved when designing a
multiprocessor system, and explain the behaviour of a typical cache
coherency protocol.</learning_outcomes><assessment>Written Examination 75
Assessed Assignments 25
Oral Presentations 0

Assessment
Two practical exercises.

If delivered in semester 1, this course will have an option for
semester 1 only visiting undergraduate students, providing
assessment prior to the end of the calendar year.</assessment><special_arrangements>None</special_arrangements><additional_info><academic_description>Not entered</academic_description><syllabus>1.Fundamentals
Performance evaluation methods and metrics, principles of high
performance design, technology issues.

2.Processor Design
Instruction set classes, registers, memory addressing. Pipeline
design, pipeline hazards &amp; interlocks, out-of-order execution,
scoreboards and reservation stations. Control prediction techniques
and their exploitation. Techniques for exploting instruction- and
loop-level parallelism.

3.Memory System Design
Memory hierarchies. Basic cache design and improvements. Main
memory design and advanced organisations.

4.I/O
I/O interface. RAIDS. Buses.

5.Multiprocessors
Multiprocessor organisations. Cache coherence.

Relevant QAA Computing Curriculum Sections: Architecture</syllabus><transferable_skills>Not entered</transferable_skills><reading_list>J.L. Hennessy &amp; D.A. Patterson, Computer
Architecture: A Quantitative Approach (3e), Morgan Kaufmann
Publishers Inc., 2003.</reading_list><study_abroad>Not entered</study_abroad><study_pattern>Not entered</study_pattern><keywords>Not entered</keywords></additional_info><contacts><course_organiser>Mr Vijayanand Nagarajan
Tel: (0131 6)51 3440
Email: vijay.nagarajan@ed.ac.uk</course_organiser><course_secretary>Mrs Victoria Swann
Tel: (0131 6)51 7607
Email: Vicky.Swann@ed.ac.uk</course_secretary></contacts></course>
